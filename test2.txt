大喵教育前端培训
================

## 阶段性测试 2018.12.07

### 大喵教育版权所有 | 出题人：谢然


1. 用文字描述如下选择器将选择哪些（个）元素
   ```css
   div, h1 {}                    //选中所有div和h1标签
   div[class] [id="abc"] {}      //选中含有class属性和id属性且id的属性值为abc的元素
   div:hover ul li > div {}      //选中当div标签处于hover状态，ul的里面的所有li的直接子元素div
   body :active {}               //选中body中的所有元素active的状态
   div:hover::after {}           //选中div标签被hover时的after伪元素
   ::selection {}                //设置所有元素中文档中被用户高亮的部分
   :target {}                    //当元素通过链接被选中，高亮被选中的部分
   input + ul + p ~ span {}      //选中紧跟（没有其他元素）input的ul和p元素的往后所有span元素
   
   ```

2. 分别写出如下几个选择器的优先级
   ```css
   * * * {}                               //0，0，0，0
   div * span {}                          //0，0，0，2
   div[title] {}                          //0，0，1，1
   fieldset legend + input {}             //0，0，0，3
   #some #thing .not:hover .abc:hover {}  //0，2，4，0
   ```

3. https://www.example.com/a/b/ 页面中有如下代码
   ```html
   <link rel="stylesheet" href="//test.example.com/path/../the/../path/c.css">
   ```
   请问最终引入的c.css的完整路径是什么？

   ```html
   http://test.example.com/path/c.css
   ```

4. `em,px,rem,vw,vh` 分别代表多长？

   ```html
   em：相对长度单位，使用em单位时，最终计算的像素值将是em值乘以使用em单位的元素的字体大小，即em仅和使用em的元素的字体大小有关，但是由于font-size具有默认继承的属性，所以通常需要注意父元素的字体大小，而当父元素也使用em元素，则需要递进计算祖先元素font-size的值，一直可以递进至浏览器设置的字体大小，也是html设置的字体大小。
   rem: 相对长度单位，类似em(root em),是相对页面根元素的字体大小，即html元素的字体大小，通常为16px，浏览器可以设置9px至72px之间的整数值。
   vw:视口宽度，整个视口宽度是100vw.
   vw:视口高度，整个视口高度是100vh.
   ```

5. 显示器的物理分辨率为 `1920x1080`，操作系统设置的分辨率为 `1280x720`，网页的放大倍数为 `110%`，请计算一个 CSS 像素对应多少个显示器物理像素（面积与长度）？

   ```matlab
   (1920/1280)x1.1=1.65
   16.5 X 1.65 = 2.72
   ```

6. 写出如下代码显示在浏览器后**每个单词**的字号
   ```html
   <style>
     html {
       font-size: 20px;
     }
     section {
       font-size: 10rem;//200px
     }
     p {
       font-size: 24px;
     }
     span {
       font-size: 150%;
     }
     .sucks {
       font-size: inherit;
     }
   </style>
   <body>
     <section>
       <h2>Brown</h2>
       <p>quick</p>
       <p>jumps <span>over <span>lazy</span> dog</span></p>
       <p class="sucks">sucks</p>
     </section>
   </body>
   <!--Brown:20x10=200px  -->
   <!--quick:24px  -->
   <!--jumps:24px  -->
   <!--over,dog:24x1.5=36px  -->
   <!--lazy:24x1.5x1.5=54px  -->
   <!--sucks:200px  -->
   ```

7. 字体的 italic 与 obsolete 的区别是？

   ```css
   italic:字体所包含的已经设计好的斜体字。
   obsolete: 过时，已被废弃。
   oblique:当字体不含斜体时网页将通过渲染将正体倾斜为oblique字体。
   ```

8. 写出满足如下条件的选择器
   * 第  8个子结点之后，倒数第 5 个子结点之前的li结点

   * 【类名】以“damiao-”开头的元素

   * rel 属性中有 nofollow 这个单词的标签

     ```html
     li:nth-child(n+8):nth-last-child(n+5)
     [class^="damiao-"]
     [rel*="nofollow"]
     ```

9. 链接伪类的几种状态书写的顺序是什么？为什么？

   ```css
   :link
   :visited
   :focus
   :hover
   :active
   ```

10. 如下 font 属性的值哪一个是书写正确的？
    * font: serif 24px;                  

    * font: serif bold 24px/1.2;

    * font: bold 24px/1.2 serif;

      ```css
      font简写规则：
      .fontExample{
      font-style:italic;
      font-variant:small-caps;
      font-weight:700;
      font-size:12px;
      line-height:24px;
      font-family:"Microsoft YaHei";
      }
      .fontExample{ font:italic small-caps 700 12px/24px "Microsoft YaHei"; }
      【说明】
      1、顺序不能改变；
      2、简写为一行的时候，font-size和line-height直接一样要用斜杠，不能分开写；
      3、没有赋值的属性，会自动使用默认值
      所以第三个是正确的
      ```

11. vertical-align 取 middle 时元素如何对齐？

    ```
    元素的行内框垂直中点与该行匿名文本的基线上方0.5ex处对齐
    元素的行内框垂直中点与该行匿名文本的x的交叉处对齐
    ```

12. 什么是 baseline？

    ```
    字体的基线，是字体设计时的参考线，通常是小写x底部挨着的那条线。
    ```

13. 详述你对盒模型的理解。

    ```
    标准盒模型：包含content，padding,border,margin.
    content:内容区，在标准盒模型中，给一个元素设置width和height，就是设置content的width和height，这些数值必须非负数。
    padding：内边距，内边距是content和border的中间区域，不能为负数，不能设置颜色，受到background属性影响。
    border：边框，围绕元素内容的外层区域，取值不能为负，可以设置样式，颜色，粗细等。
    margin：外边距，margin可以设置负值，margin表示的其它元素与该元素的位置关系，margin不能包含其他元素和内容，只是一片空白区域。
    ie盒子模型：设置box-sizing属性为border-box，在border-box设置width和height将会是标准盒模型的content、padding、border相加的值，更方便对盒子整体设置样式。
    ```

14. 如何让一个元素可被 focus？如何去掉其被 focus 时的虚框？

    ```css
    给元素添加tabindex属性。
    a:focus{
        outline:none;
    }
    ```

15. 如何给css添加注释

    ```
    /* 我就是一行CSS的注释 */
    ```

16. 指出如下css代码中的错误
    ```css
    p,h1,{
        background-color: rgba:(abc)
        font-varient; abc;
        colr: #ff048;
        font: "serif" 25px;
    }
    ```

    ```css
    p,h1{
        background-color: rgba:(0,0,0,0.1);
        font-varient; normal;
        color: #ff048;
        font: 25px serif;
    }
    ```

17. 元素的高度写百分比在什么情况下【无效】，为什么？在什么情况下【有效】，有效时是以哪个元素的高度为基准值？

    ```
    
    ```

18. 解释 box-sizing 可以取哪些值，以及每个值的意义

    ```
    content-box：默认值，可以设置内容区(content)的宽高，元素最终宽高需要加上border和padding的宽度
    border-box:包含content，padding，border的盒子，更方便的确定一个元素的宽高。
    ```

19. 如下结构中，div 有两个伪元素，分别标出伪元素的位置，用 `<before></before>` 表示 `::before` 伪元素，用 `<after></after>` 表示 `::after` 伪元素
    ```html
    <div>
      <h1>The article</h1>
      <p>the quick brown fox</p>
    </div>
    ```

20. 如何在伪元素中插入换行符？如何让这个换行符在页面中生效？

    ```css
    ::before {
      content: '\A';
      white-space: pre;
    }
    ```

21. 简述 ie7 市场份额比 ie6 低的原因并在网络上找出目前各大浏览器在中国和全球的市场份额

    ```
    ie6是WindowsXP自带的浏览器，ie7是WindowsVista自带的浏览器，但是WindowsVista是一款失败的系统类似win8的地位，WindowsVista市场份额很小，相反WindowsXP作为经典的Windows系统在市场的占有率一直都比较高，特别是中国甚至现在都有不少的xp系统。而ie7与i6操作发生了变化，人们更习惯ie6的操作，所以很多当时安装了ie7的用户都是卸载ie7安装i6，这样导致了i6统治web很长一段时间。
    ```

22. 页面有无 `doctype` 声明会有什么区别？

    ```
    DOCTYPE声明告诉类似的代码校验器或者浏览器应该按照什么规则集解析文档。没有DOCTYPE，会导致页面有可能出现兼容模式，出现怪异的行为，在ie6和ie7表现为盒模型为border-box
    ```

23. 有一张高为 100 宽为 50 的图片，内有一个直径为 40 的圆，其做为一个 200x200 的元素的背景图片，background-size 为 contain 和 cover 时，圆的直径分别为多少？

    ```css
    contain：保持图像的宽高比例，同时缩小或放大图像至能被容器容纳的最大情况，可能产生repeat。
    cover：保持图片的宽高比不变，缩放图片至铺满整个容器，多余的部分将会被剪掉，一般不会repeat。
    所以contain：图片最大放大2倍，直径为40x2=80，cover：图片为了充满整个容器，宽高都是200则需要原图按比例扩大4倍，直径40x4=160.
    ```

24. 写出实现小米网首页 logo 返回主页的动画效果的代码。

    ```css
            .mi-logo{
                position: relative;
                display: block;
                width: 55px;
                height: 55px;
                background-color: #ff6700;
                overflow: hidden;
            }
            .mi-logo::before,.mi-logo::after{
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                height: 55px;
                width: 55px;
                background-repeat: no-repeat;
                background-size: cover;
                transform-origin: 50% 50%;
                transition: all .2s;
            }
            .mi-logo::before{
                background-image: url(img/mi-logo.png);
                opacity: 1;
            }
            .mi-logo::after{
                margin-left: -55px;
                background-image: url(img/mi-home.jpg);
                opacity: 0;   
            }
            .mi-logo:hover::before{
                opacity: 0;
                transform: translate3d(55px,0,0);
            }
            .mi-logo:hover::after{
                opacity: 1;
                transform: translate3d(55px,0,0);
            }
    ```

25. 给出至少 5 种水平垂直居中方案。

    ```css
    //块元素垂直居中，未知宽高，在需要垂直居中的父元素设置为display：relative
    div{
        position:absolute;
        margin:auto;
        top:0;right:0;left:0;bottom:0;
    }
    div{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    div{
        display:tabe-cell;
        vertical-align: middle;
    }
    div{
        display:flex;
        justify-content:center;
        align-items:center;
    }
    
    
    ```

26. 简述 em 框，内容区，行内框，行框的构成以及其需要注意的问题。

27. 如何确定一个行内框的baseline及其最高点和最低点？

28. `td` 元素的 `headers` 属性是干嘛的？

29. color 这个属性有什么需要注意的地方？

30. 如何理解 inline-block 元素？它有什么需要注意的地方？

    ```
    
    ```

31. 什么是 CSS Sprite？为什么要使用 CSS Sprite？它有哪些优缺点？

32. 找出如下代码中的错误
    ```
    <style>
      div::after：hover {
        opacity: 85%；
        transition: opactiy .3s step(5,end);
      }
      a:visited {
        font-size: 28px;
      }
    </style>
    <div>
      <a href="jd.com”>京东商场<a>
      <a href="mi.com”>小米网<a>
    </div>
    ```

    ```
      div:hover::after {
        opacity: 0.85;
        transition: opactiy .3s step(5,end);
      }
      a:visited {
        color:red;
      }
    ```

33. 如下内容渲染在【同一行】中，请计算那一行的理论行高
    ```html
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width">
      <title>JS Bin</title>
      <style>
        div {
          margin: 80px;
          background-color: violet;
        }
        span {
          display: inline-block;
          border: 1px dotted;
          background-color: pink;
        }
    
        .a {
          vertical-align: -15px;
          width: 30px;
          height: 30px;
        }
        .b {
          margin-top: -50px;
          width: 30px;
          height: 30px;
          vertical-align: top;
        }
        .c {
          margin-bottom: 10px;
          vertical-align: middle;
        }
        .d {
          width: 30px;
          height: 30px;
        }
      </style>
    </head>
    <body>
      <div>
        x<span class="a">foo</span>
        <span class="b">bar</span>
        <span class="c">baz</span>
        <span class="d"></span>
      </div>
    </body>
    </html>
    ```

    ```
    
    ```

34. `vertical-align` 取值为 `baseline` 时在不同情况下分别是如何对齐的？

    ```
    行内元素：文本的baseline对齐
    行内替换元素：margin-box的底部对齐baseline
    行内块元素：
      有内容：最后一行文本的baseline对齐
      无内容：同行内替换元素
    表格元素：每个单元格第一行文本的baseline对齐。
    ```

35. 解释常规流与包含块的概念

    ```css
    常规流(normal flow):将窗体自上而下分成一行一行,块级元素从上至下、行内元素在每行中按从左至右的挨次排放元素,即为常规流。
    包含块(containing block)：很多框的定位和尺寸的计算，都取决于一个矩形的边界，这个矩形，被称作是包含块.
    ```

36. 在各种情况下，一个元素的包含块分别是什么？

    ```css
    一个元素的包含块取决于它的position属性的值：
    1 如果 position 属性为 static 或 relative ，包含块就是由它的最近的祖先块元素（比如说inline-block, block 或 list-item元素）或格式化上下文(比如说 a table container, flex container, grid container, or the block container itself)的内容区的边缘组成的。
    2 如果 position 属性为 absolute ，包含块就是由它的最近的 position 的值不是 static （也就是值为fixed, absolute, relative 或 sticky）的祖先元素的内边距区的边缘组成。
    3 如果 position 属性是 fixed，包含块就是由 viewport (in the case of continuous media) 或是组成的。
    参考：https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block
    ```

37. 默写与背景相关的属性并说明每个属性的作用和会产生的效果

    ```c&#39;s&#39;s
    background-color设置背景颜色。
    background-image：设置背景图片。
    background-repeat：默认沿着x,y轴重复（从左至右，从上至下），以border-box为基准，尽管背景图片平铺起始于padding-box左上角，但是其从各个方向朝外面平铺，包括border区域。
    background-attachment：设置背景图相对位置，fixed相对浏览器固定，不更随内容移动；local相对元素内容固定，如果一个元素拥有滚动机制，背景将会随着元素的内容滚动，就是类似单个元素内的fixed效果。默认值scroll，和元素本身固定，跟随元素一起移动。
    background-position:以元素的padding-box为基准，对背景进行位置调整，语法：left 10px top 10px,可以为负值。
    background-size:对背景图片进行缩放控制。
    background-clip:对背景图剪裁，决定背景图片显示在那个盒子，content、padding以及border。
    background-orign:决定背景图片定位在哪个盒子中，content、padding以及border。
    参考链接：https://www.zhangxinxu.com/wordpress/2011/05/%E7%BF%BB%E8%AF%91-css3-backgrounds%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/
    ```

38. 如何实现单方向的盒子阴影？

    ```
    设置适当的spread-radius（扩散半径）的值，负spread-radius会对形成的阴影进行剪裁，同时减去阴影的width和height的值。
    ```

39. 默写与表格布局相关的 CSS 属性，并说明相关属性的作用

    ```c&#39;s&#39;s
    table    { display: table }
    tr       { display: table-row }            //表格行
    thead    { display: table-header-group }   //表头
    tbody    { display: table-row-group }      //表的主体
    tfoot    { display: table-footer-group }   //表尾
    col      { display: table-column }         //表格列
    colgroup { display: table-column-group }   //表格列组
    td, th   { display: table-cell }           //表单元格
    caption  { display: table-caption }        //表格标题
    ```

40. `visibility:hidden`，`display:none`，`opacity:0`分别有什么不同？

    |                                    | visibility:hidden | display:none |     opacity:0      |
    | :--------------------------------: | :---------------: | :----------: | :----------------: |
    |            是否占据空间            |         ✓         |      X       |         ✓          |
    |          产生回流(reflow)          |         X         |      ✓       |         X          |
    |         产生重绘(repaint)          |         ✓         |      ✓       | X（一般GPU不产生） |
    |           支持transition           |         ✓         |      X       |         ✓          |
    | 自身绑定事件是否能继续触发(click)  |         X         |      X       |         ✓          |
    | 子元素设置该属性其他值是否继续显示 |         ✓         |      X       |         X          |
    |    是否影响被挡住的元素触发事件    |         X         |      X       |         ✓          |

    > https://www.zhangxinxu.com/wordpress/2012/02/css-overflow-hidden-visibility-hidden-disabled-use/
    >
    > https://blog.csdn.net/fe_dev/article/details/80383232

41. 当页面中出现表示时间的文字但表意不明确时，比较优雅且富有语义的做法是什么？

    ```html
    添加日期准确时间
    <time datetime="2018-12-08">昨天</time>
    ```

42. CSS 中一般为何不使用 `cm`，`mm` 等长度单位？

    ```css
    所谓的绝对单位 (cm, mm, in, pt and pc) 在CSS内与任何其它地方的意思都一样， 前提是你的输出装置的分辨率够高。在镭射打印机上， 1cm应为准确的1厘米。但在低分辨率的装置上(如电脑屏幕)，CSS不需要该精确度。 确实，在不同的装置或不同的CSS上，常会有不同的结果。这些单位最好是在高分辨率的装置或打印机上使用。在电脑屏幕以及手持装置上，你可能得不到你所期望的结果。
    除了打印，基本没有使用。
    ```

43. 表格布局中各层的层次是？

    ```html
    <table>
        <caption></caption>
        <thead>
            <tr>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td></td>
                <td></td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    ```

44. 为什么要在文件的最后一行加一个回车？

    ```html
    POSIX标准：
    3.206 Line 
    A sequence of zero or more non- <newline> characters plus a terminating <newline> character.
    //翻译：行是由0个或者多个非 “换行” 符的字符组成，并且以 “换行” 符结尾。
     最后一行不换行的警告：\ No new line at end of file   (git diff会产生)
     最后一行不换行，在单文件显示不会出错，但当两或更多个文件拼接时，会导致拼接部分不能正常拼接。
    ```

45. 用 CSS 画出一个半圆形，分别给出实心与空心的的画法。实心和空心分别给出两种方案。

46. 表单元素有哪些伪类选择器？

    ```
    E:checked
    E:disabled
    E:enabled
    E:focus
    E:empty
    E:valid
    E:invalid
    E:read-only
    E:read-write
    E:scope
    .......etc
    ```

47. 如何禁用 textarea 元素默认的可缩放行为？

    ```css
    设置resize值为none
    ```

48. reset与normalize分别是什么，区别是什么，何种场景会使用到？

    ```css
    reset.css:目的是覆盖所有标签的默认样式，提供完全统一的样式。
    normalize:目的是修正主流浏览器对相同样式渲染不一致的问题，保留标签默认样式，修复常见桌面端和移动端浏览器bug。
    ```

49. 表布局中边框合并的原则是什么？

    ```
    
    ```

50. 如何让背景图片从元素的左下角向上偏移5像素，往右偏移3像素；图片不重复平铺？写出代码。

    ```css
    {
        background-repeat:no-repeat;
        background-position:left 3px bottom 5px;
        background-position: right 3px top 0;
    }
    ```

51. 写出创建如下目录结果的命令行脚本（注：有扩展名的为文件，没有扩展名的为文件夹）。
    ```shell
    a
    │  readme.md
    │
    ├─foo
    │  └─c
    └─bar
        │  a.txt
        │  b.txt
        │
        └─y
                a.js        
    ```

    ```shell
    
    ```

52. 中英互翻

    omit ，multiple，驼峰式，中划线式，layout，typo，code review，半径，config，集合，矩形，binary，decimal，十六进制，八进制，SEO，HTML实体，语义化，兼容性，quirk，reference，大小写敏感，别名

    ```
    omit ，multiple，驼峰式，中划线式，layout，typo，code review，半径，config，集合，矩形，binary，decimal，十六进制，八进制，SEO，HTML实体，语义化，兼容性，quirk，reference，大小写敏感，别名
    ```

    | omit        |                  |            |               |
    | ----------- | :--------------- | ---------- | ------------- |
    | multiple    | case senstive    | 别名       | alias         |
    | 驼峰式      | CamelCase        | 十六进制   | hex           |
    | 中划线式    | strikethrough    | 八进制     | octal         |
    | layout      | 布局             | 集合       | collection    |
    | typo        | 打印错误         | 大小写敏感 | case senstive |
    | code review | 代码评审         | 兼容性     | compatibility |
    | config      | 配置，设置，布局 | HTML实体   | HHTML Entity  |
    | binary      | 二进制           | 语义化     | semantization |
    | decimal     | 小数             | 半径       | radius        |
    | SEO         | 搜索引擎优化     | 矩形       | rectangle     |
    | quirk       | 古怪的           | reference  | 参考，引用    |

